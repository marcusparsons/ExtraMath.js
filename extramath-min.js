function round(r,e,a){var t,o,n,c;if(e|=0,t=Math.pow(10,e),r*=t,c=r>0|-(0>r),n=r%1===.5*c,o=Math.floor(r),n)switch(a){case"round_up":r=o+(c>0);break;case"round_down":r=o+(0>c);break;case"round_even":r=o+o%2*c;break;case"round_odd":r=o+!(o%2);break;default:r=o+(c>0)}return(n?r:Math.round(r))/t}var defPrec=12;Math.acosh=Math.acosh||function(arg,prec){try{return 1>arg?(showNotice("Error: acosh only accepts numbers greater than or equal to 1"),0):prec?round(eval(Math.log(arg+Math.sqrt(arg*arg-1))),prec):round(eval(Math.log(arg+Math.sqrt(arg*arg-1))),defPrec)}catch(err){alert("Error: Unable to process expression due to "+err+".")}},Math.asinh=Math.asinh||function(arg,prec){try{return arg===-1/0?arg:prec?round(eval(Math.log(arg+Math.sqrt(arg*arg+1))),prec):round(eval(Math.log(arg+Math.sqrt(arg*arg+1))),defPrec)}catch(err){alert("Error: Unable to process expression due to "+err+".")}},Math.atanh=Math.atanh||function(arg,prec){try{return-1>arg||arg>1?(showNotice("Error: atanh only accepts numbers between 1 and -1, exclusive."),0):prec?round(eval(Math.log((1+arg)/(1-arg))/2),prec):round(eval(Math.log((1+arg)/(1-arg))/2),defPrec)}catch(err){alert("Error: Unable to process expression due to "+err+".")}},Math.cbrt=Math.cbrt||function(r,e){try{if(e){var a=Math.pow(Math.abs(r),1/3);return a=0>r?-a:a,round(a,e)}var a=Math.pow(Math.abs(r),1/3);return a=0>r?-a:a,round(a,defPrec)}catch(t){alert("Error: Unable to process expression due to "+t+".")}},Math.clz32=Math.clz32||function(r){try{var e=Number(r)>>>0;return e?32-e.toString(2).length:32}catch(a){alert("Error: Unable to process expression due to "+a+".")}},Math.cosh=Math.cosh||function(arg,prec){try{var y=Math.exp(arg);return prec?round(eval((y+1/y)/2),prec):round(eval((y+1/y)/2),defPrec)}catch(err){alert("Error: Unable to process expression due to "+err+".")}},Math.expm1=Math.expm1||function(arg,prec){try{return prec?round(eval(Math.exp(arg)-1),prec):round(eval(Math.exp(arg)-1),defPrec)}catch(err){alert("Error: Unable to process expression due to "+err+".")}},Math.fround=Math.fround||function(r){try{return Float32Array?new Float32Array([r])[0]:(alert("fround cannot execute because Float32Array not supported."),0)}catch(e){alert("Error: Unable to process expression due to "+e+".")}},Math.ftor=function(arg){try{if(arg=parseInt(arg,10),arg>0){for(var args=[],i=0;arg>i;i++)args.push(i+1+"*");args[args.length-1]=args.length,args=args.toString();do args=args.replace(",","");while(args.indexOf(",")>-1);return round(eval(args),64)}return 0===arg?"1":(alert("Factorials can only be done on positive numbers!"),0)}catch(err){alert("Error: Unable to process expression due to "+err+".")}},Math.hypot=Math.hypot||function(){try{var r=0;for(var e in arguments){if(1/0===arguments[e]||arguments[e]===-1/0)return 1/0;r+=arguments[e]*arguments[e]}return round(Math.sqrt(r),defPrec)}catch(a){alert("Error: Unable to process expression due to "+a+".")}},Math.imul=Math.imul||function(r,e){try{var a=r>>>16&65535,t=65535&r,o=e>>>16&65535,n=65535&e;return t*n+(a*n+t*o<<16>>>0)|0}catch(c){alert("Error: Unable to process expression due to "+c+".")}},Math.log10=Math.log10||function(arg,prec){try{return prec?round(eval(Math.log(arg)/Math.log(10)),prec):round(eval(Math.log(arg)/Math.log(10)),defPrec)}catch(err){alert("Error: Unable to process expression due to "+err+".")}},Math.log1p=Math.log1p||function(arg,prec){try{return prec?round(eval(Math.log(1+arg)),prec):round(eval(Math.log(1+arg)),defPrec)}catch(err){alert("Error: Unable to process expression due to "+err+".")}},Math.log2=Math.log2||function(arg,prec){try{return prec?round(eval(Math.log(arg)/Math.log(2)),prec):round(eval(Math.log(arg)/Math.log(2)),defPrec)}catch(err){alert("Error: Unable to process expression due to "+err+".")}},Math.logb=function(base,arg,prec){try{return prec?round(eval(Math.log(arg)/Math.log(base)),prec):round(eval(Math.log(arg)/Math.log(base)),defPrec)}catch(err){alert("Error: Unable to process expression due to "+err+".")}},Math.mean=function(){var total=0;try{if("string"==typeof arguments[0]||"number"==typeof arguments[0]){for(var i in arguments)total+=parseInt(arguments[i],10);return round(total/arguments.length,defPrec)}var len=arguments[0].length;arguments[0]=arguments[0].toString();do arguments[0]=arguments[0].replace(",","+");while(arguments[0].indexOf(",")>-1);return arguments[0]=eval(arguments[0]),round(eval(arguments[0]/len),defPrec)}catch(err){alert("Error: Unable to process expression due to "+err+".")}},Math.nthroot=function(r,e,a){try{if(e=parseInt(e,10),e%2===0&&0>r)return alert("Even roots require a positive number!"),0;if(a){var t=Math.pow(Math.abs(r),1/e);return t=0>r?-t:t,round(t,a)}var t=Math.pow(Math.abs(r),1/e);return t=0>r?-t:t,round(t,defPrec)}catch(o){alert("Error: Unable to process expression due to "+o+".")}},Math.randomr=function(min,max){try{return min=parseInt(min,10),max=parseInt(max,10),eval(Math.floor(Math.random()*(max-min+1))+min)}catch(err){alert("Error: Unable to process expression due to "+err+".")}},Math.sign=Math.sign||function(r){try{return r>0?1:0>r?-1:0}catch(e){alert("Error: Unable to process expression due to "+e+".")}},Math.sinh=Math.sinh||function(arg,prec){try{return prec?round(eval((Math.exp(arg)-Math.exp(-arg))/2),prec):round(eval((Math.exp(arg)-Math.exp(-arg))/2),defPrec)}catch(err){alert("Error: Unable to process expression due to "+err+".")}},Math.tanh=Math.tanh||function(arg,prec){try{return 1/0===arg?1:arg===-1/0?-1:prec?round(eval((Math.exp(arg)-Math.exp(-arg))/(Math.exp(arg)+Math.exp(-arg))),prec):round(eval((Math.exp(arg)-Math.exp(-arg))/(Math.exp(arg)+Math.exp(-arg))),defPrec)}catch(err){alert("Error: Unable to process expression due to "+err+".")}},Math.trunc=Math.trunc||function(r){try{return 0>r?Math.ceil(r):Math.floor(r)}catch(e){alert("Error: Unable to process expression due to "+e+".")}};
