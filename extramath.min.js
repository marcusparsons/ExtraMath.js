function round(r,e,a){var o,t,s,n;if(e|=0,o=Math.pow(10,e),r*=o,n=r>0|-(0>r),s=r%1===.5*n,t=Math.floor(r),s)switch(a){case"round_up":r=t+(n>0);break;case"round_down":r=t+(0>n);break;case"round_even":r=t+t%2*n;break;case"round_odd":r=t+!(t%2);break;default:r=t+(n>0)}return(s?r:Math.round(r))/o}function showError(r){alert(r)}var defPrec=16;Math.acosh=function(arg){try{return arg=parseFloat(arg),1>arg?(showNotice("Error: acosh only accepts numbers greater than or equal to 1"),0):round(eval(Math.log(arg+Math.sqrt(arg*arg-1))),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.area=function(shape){try{var args=[];if("string"==typeof arguments[1]||"number"==typeof arguments[1])for(var i in arguments)args[i]=arguments[i];else for(var i=0;i<arguments[1].length+1;i++)args[i]=arguments[1].shift();switch(shape){case"circle":case"cir":try{var r=parseFloat(args[0]);return"exact"===args[1]?round(eval(Math.pow(r,2)),defPrec)+"&pi;":round(eval(Math.PI*Math.pow(r,2)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"cone":case"con":try{var r=parseFloat(args[0]),h=parseFloat(args[1]);return round(eval(Math.PI*r*(r+Math.sqrt(Math.pow(h,2)+Math.pow(r,2)))),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"cube":case"cub":try{var side=parseFloat(args[0]);return round(eval(6*Math.pow(side,2)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"cylinder":case"cyl":try{var r=parseFloat(args[0]),h=parseFloat(args[1]);return round(eval(2*Math.PI*r*(h+r)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"cylside":case"cys":try{}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"ellipse":case"ell":try{var a=parseFloat(args[0]),b=parseFloat(args[1]);return"exact"===args[2]?round(eval(a*b),defPrec)+"&pi;":round(eval(Math.PI*a*b),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"npolygon":case"npo":try{var n=parseFloat(args[0]),side=parseFloat(args[1]);return round(eval(.25*n*Math.pow(side,2)*(1/Math.tan(Math.PI/n))),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"parallelogram":case"par":try{var a=parseFloat(args[0]),b=parseFloat(args[1]);return round(eval(a*b),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"rectangle":case"rec":try{var a=parseFloat(args[0]),b=parseFloat(args[1]);return round(eval(a*b),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"sector":case"sec":try{var r=parseFloat(args[0]),angle=parseFloat(args[1]);return round(eval(.5*Math.pow(r,2)*angle),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"segment":case"seg":try{var r=parseFloat(args[0]),angle=parseFloat(args[1]);return round(eval(.5*(angle-Math.sin(angle))*Math.pow(r,2)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"square":case"squ":try{var a=parseFloat(args[0]);return round(eval(Math.pow(a,2)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"sphere":case"sph":try{var r=parseFloat(args[0]);return round(eval(4*Math.PI*Math.pow(r,2)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"torus":case"tor":try{var lilr=parseFloat(args[0]),bigr=parseFloat(args[1]);return round(eval(4*Math.pow(Math.PI,2)*lilr*bigr),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"trapezoid":case"tra":try{var a=parseFloat(args[0]),b=parseFloat(args[1]),h=parseFloat(args[2]);return round(eval(.5*(a+b)*h),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"triangle":case"tri":try{var b=parseFloat(args[0]),h=parseFloat(args[1]);return round(eval(.5*b*h),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;default:showError("You must choose a shape in order to calculate its area. You may enter the full name of the shape or the first three letters.")}}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.asinh=function(arg){try{return arg=parseFloat(arg),arg===-1/0?arg:round(eval(Math.log(arg+Math.sqrt(arg*arg+1))),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.atanh=function(arg){try{return arg=parseFloat(arg),-1>arg||arg>1?(showNotice("Error: atanh only accepts numbers between 1 and -1, exclusive."),0):round(eval(Math.log((1+arg)/(1-arg))/2),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.cbrt=function(r){try{r=parseFloat(r);var e=Math.pow(Math.abs(r),1/3);return e=0>r?-e:e,round(e,defPrec)}catch(a){showError("Error: Unable to process expression due to "+a+".")}},Math.clz32=function(r){try{var e=Number(r)>>>0;return e?32-e.toString(2).length:32}catch(a){showError("Error: Unable to process expression due to "+a+".")}},Math.cosh=function(arg){try{arg=parseFloat(arg);var y=Math.exp(arg);return round(eval((y+1/y)/2),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.expm1=function(arg){try{return arg=parseFloat(arg),round(eval(Math.exp(arg)-1),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.fround=function(r){try{return Float32Array?new Float32Array([r])[0]:(showError("fround cannot execute because Float32Array not supported."),0)}catch(e){showError("Error: Unable to process expression due to "+e+".")}},Math.fact=function(arg){try{if(arg=parseInt(arg,10),arg>0){for(var args=[],i=0;arg>i;i++)args.push(i+1+"*");args[args.length-1]=args.length,args=args.toString();do args=args.replace(",","");while(args.indexOf(",")>-1);return round(eval(args),64)}return 0===arg?"1":(showError("Factorials can only be done on positive numbers!"),0)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.hypot=function(){try{var r=0;for(var e in arguments){if(1/0===arguments[e]||arguments[e]===-1/0)return 1/0;arguments[e]=parseFloat(arguments[e]),r+=arguments[e]*arguments[e]}return round(Math.sqrt(r),defPrec)}catch(a){showError("Error: Unable to process expression due to "+a+".")}},Math.imul=function(r,e){try{var a=r>>>16&65535,o=65535&r,t=e>>>16&65535,s=65535&e;return o*s+(a*s+o*t<<16>>>0)|0}catch(n){showError("Error: Unable to process expression due to "+n+".")}},Math.intdiv=function(){try{if("string"==typeof arguments[0]||"number"==typeof arguments[0]){var total="";for(var i in arguments)total+=parseFloat(arguments[i]).toString()+"/";return total=total.substr(0,total.length-1),Math.floor(eval(total))}arguments[0]=arguments[0].toString();do arguments[0]=arguments[0].replace(",","/");while(arguments[0].indexOf(",")>-1);return Math.floor(eval(arguments[0]))}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.line=function(){try{var r={};if("string"==typeof arguments[0]||"number"==typeof arguments[0]){arguments[0]=parseFloat(arguments[0]),arguments[1]=parseFloat(arguments[1]),arguments[2]=parseFloat(arguments[2]),arguments[3]=parseFloat(arguments[3]),r.slope=(arguments[3]-arguments[1])/(arguments[2]-arguments[0]),r.yint=arguments[1]-round(r.slope*arguments[0],defPrec);var e=r.yint>0?" + "+r.yint:" - "+-r.yint;return r.equation="y = "+r.slope+"x"+e,r}if(arguments[0].length>4)return showError("You may only use two sets of points with the line function!"),0;var a=[],o=0,r={};do a[o]=parseFloat(arguments[0].shift()),o++;while(arguments[0].length>0);r.slope=(a[3]-a[1])/(a[2]-a[0]),r.yint=a[1]-round(r.slope*a[0],defPrec);var e=r.yint>0?" + "+r.yint:" - "+-r.yint;return r.equation="y = "+r.slope+"x"+e,r}catch(t){showError("Error: Unable to process expression due to "+t+".")}},Math.log10=function(arg){try{return arg=parseFloat(arg),round(eval(Math.log(arg)/Math.log(10)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.log1p=function(arg){try{return arg=parseFloat(arg),round(eval(Math.log(1+arg)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.log2=function(arg){try{return arg=parseFloat(arg),round(eval(Math.log(arg)/Math.log(2)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.logb=function(base,arg){try{return base=parseFloat(base),arg=parseFloat(arg),round(eval(Math.log(arg)/Math.log(base)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.mean=function(){var total=0;try{if("string"==typeof arguments[0]||"number"==typeof arguments[0]){for(var i in arguments)total+=parseInt(arguments[i],10);return round(total/arguments.length,defPrec)}var len=arguments[0].length;arguments[0]=arguments[0].toString();do arguments[0]=arguments[0].replace(",","+");while(arguments[0].indexOf(",")>-1);return arguments[0]=eval(arguments[0]),round(eval(arguments[0]/len),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.nck=function(n,k){try{if(n=parseInt(n,10),k=parseInt(k,10),n>0&&k>0)return round(eval(Math.fact(n)/(Math.fact(n-k)*Math.fact(k))),defPrec);showError("When using nck, n and k must both be greater than zero!")}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.nroot=function(r,e){try{if(r=parseFloat(r),e=parseInt(e,10),e%2===0&&0>r)return showError("Even roots require a positive number!"),0;var a=Math.pow(Math.abs(r),1/e);return a=0>r?-a:a,round(a,defPrec)}catch(o){showError("Error: Unable to process expression due to "+o+".")}},Math.perimeter=function(shape){try{var args=[];if("string"==typeof arguments[1]||"number"==typeof arguments[1])for(var i in arguments)args[i]=arguments[i];else for(var i=0;i<arguments[1].length+1;i++)args[i]=arguments[1].shift();switch(shape){case"circle":case"cir":try{var r=parseFloat(args[0]);return round(eval(2*Math.PI*r),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"ellipse":case"ell":try{var a=parseFloat(args[0]),b=parseFloat(args[1]),h=Math.pow(a-b,2)/Math.pow(a+b,2);return round(eval(Math.PI*(a+b)*(1+3*h/(10+Math.sqrt(4-3*h)))),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"quadrilateral":case"qua":try{var a=parseFloat(args[0]),b=parseFloat(args[1]),c=parseFloat(args[2]),d=parseFloat(arguments[4]);return round(eval(a+b+c+d),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"rectangle":case"rec":try{var w=parseFloat(args[0]),h=parseFloat(args[1]);return round(eval(2*(w+h)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"sector":case"sec":try{var r=parseFloat(args[0]),angle=parseFloat(args[1]);return round(eval(r*(angle+2)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"square":case"squ":try{var a=parseFloat(args[0]);return round(eval(4*a),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"triangle":case"tri":try{var a=parseFloat(args[0]),b=parseFloat(args[1]),c=parseFloat(args[2]);return round(eval(a+b+c),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;default:showError("You must choose a shape in order to calculate its perimeter. You may enter the full name of the shape or the first three letters.")}}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.randomr=function(min,max){try{return min=parseInt(min,10),max=parseInt(max,10),eval(Math.floor(Math.random()*(max-min+1))+min)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.sign=function(r){try{return r>0?1:0>r?-1:0}catch(e){showError("Error: Unable to process expression due to "+e+".")}},Math.sinh=function(arg){try{return arg=parseFloat(arg),round(eval((Math.exp(arg)-Math.exp(-arg))/2),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.tanh=function(arg){try{return 1/0===arg?1:arg===-1/0?-1:(arg=parseFloat(arg),round(eval((Math.exp(arg)-Math.exp(-arg))/(Math.exp(arg)+Math.exp(-arg))),defPrec))}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.trunc=function(r){try{return r=parseFloat(r),0>r?Math.ceil(r):Math.floor(r)}catch(e){showError("Error: Unable to process expression due to "+e+".")}},Math.volume=function(shape){try{var args=[];if("string"==typeof arguments[1]||"number"==typeof arguments[1])for(var i in arguments)args[i]=arguments[i];else for(var i=0;i<arguments[1].length+1;i++)args[i]=arguments[1].shift();switch(shape){case"cone":case"con":try{var r=parseFloat(args[0]),h=parseFloat(args[1]);return round(eval(1/3*Math.PI*Math.pow(r,2)*h),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"cube":case"cub":try{var side=parseFloat(args[0]);return round(eval(Math.pow(side,3)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"cylinder":case"cyl":try{var r=parseFloat(args[0]),h=parseFloat(args[1]);return round(eval(Math.PI*Math.pow(r,2)*h),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"ellipsoid":case"ell":try{var r1=parseFloat(args[0]),r2=parseFloat(args[1]),r3=parseFloat(args[2]);return round(eval(4/3*Math.PI*r1*r2*r3),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"irregularprism":case"irr":try{var b=parseFloat(args[0]),h=parseFloat(args[1]);return round(eval(b*h),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"pyramid":case"pyr":try{var l=parseFloat(args[0]),w=parseFloat(args[1]),h=parseFloat(args[2]);return round(eval(l*w*h/3),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"rectangularprism":case"rec":try{var l=parseFloat(args[0]),w=parseFloat(args[1]),h=parseFloat(args[2]);return round(eval(l*w*h),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"sphere":case"sph":try{var r=parseFloat(args[0]);return round(eval(4/3*Math.PI*Math.pow(r,3)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;default:showError("You must choose a shape in order to calculate its volume. You may enter the full name of the shape or the first three letters.")}}catch(err){showError("Error: Unable to process expression due to "+err+".")}};
