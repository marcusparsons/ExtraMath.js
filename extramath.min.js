function round(r,e,a){var t,o,s,n;if(e|=0,t=Math.pow(10,e),r*=t,n=r>0|-(0>r),s=r%1===.5*n,o=Math.floor(r),s)switch(a){case"round_up":r=o+(n>0);break;case"round_down":r=o+(0>n);break;case"round_even":r=o+o%2*n;break;case"round_odd":r=o+!(o%2);break;default:r=o+(n>0)}return(s?r:Math.round(r))/t}function showError(r){alert(r)}var defPrec=16;Math.acosh=function(arg){try{return arg=parseFloat(arg),1>arg?(showNotice("Error: acosh only accepts numbers greater than or equal to 1"),0):round(eval(Math.log(arg+Math.sqrt(arg*arg-1))),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.area=function(shape){try{switch(shape){case"triangle":case"tri":try{return arguments[1]=parseFloat(arguments[1]),arguments[2]=parseFloat(arguments[2]),round(eval(.5*arguments[1]*arguments[2]),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"rectangle":case"rec":try{return arguments[1]=parseFloat(arguments[1]),arguments[2]=parseFloat(arguments[2]),round(eval(arguments[1]*arguments[2]),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"trapezoid":case"tra":try{return arguments[1]=parseFloat(arguments[1]),arguments[2]=parseFloat(arguments[2]),arguments[3]=parseFloat(arguments[3]),round(eval(.5*(arguments[1]+arguments[2])*arguments[3]),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"ellipse":case"ell":try{return arguments[1]=parseFloat(arguments[1]),arguments[2]=parseFloat(arguments[2]),"exact"===arguments[3]?round(eval(arguments[1]*arguments[2]),defPrec)+"&pi;":round(eval(Math.PI*arguments[1]*arguments[2]),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"square":case"squ":try{return arguments[1]=parseFloat(arguments[1]),round(eval(Math.pow(arguments[1],2)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"parallelogram":case"par":try{return arguments[1]=parseFloat(arguments[1]),arguments[2]=parseFloat(arguments[2]),round(eval(arguments[1]*arguments[2]),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"circle":case"cir":try{return arguments[1]=parseFloat(arguments[1]),"exact"===arguments[2]?round(eval(Math.pow(arguments[1],2)),defPrec)+"&pi;":round(eval(Math.PI*Math.pow(arguments[1],2)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"sector":case"sec":try{return arguments[1]=parseFloat(arguments[1]),arguments[2]=parseFloat(arguments[2]),round(eval(.5*Math.pow(arguments[1],2)*arguments[2]),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;case"segment":case"seg":try{return arguments[1]=parseFloat(arguments[1]),arguments[2]=parseFloat(arguments[2]),round(eval(.5*(arguments[2]-Math.sin(arguments[2]))*Math.pow(arguments[1],2)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}break;default:showError("You must choose a shape in order to calculate its area. You may enter the full name of the shape or the first three letters.")}}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.asinh=function(arg){try{return arg=parseFloat(arg),arg===-1/0?arg:round(eval(Math.log(arg+Math.sqrt(arg*arg+1))),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.atanh=function(arg){try{return arg=parseFloat(arg),-1>arg||arg>1?(showNotice("Error: atanh only accepts numbers between 1 and -1, exclusive."),0):round(eval(Math.log((1+arg)/(1-arg))/2),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.cbrt=function(r){try{r=parseFloat(r);var e=Math.pow(Math.abs(r),1/3);return e=0>r?-e:e,round(e,defPrec)}catch(a){showError("Error: Unable to process expression due to "+a+".")}},Math.clz32=function(r){try{var e=Number(r)>>>0;return e?32-e.toString(2).length:32}catch(a){showError("Error: Unable to process expression due to "+a+".")}},Math.cosh=function(arg){try{arg=parseFloat(arg);var y=Math.exp(arg);return round(eval((y+1/y)/2),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.expm1=function(arg){try{return arg=parseFloat(arg),round(eval(Math.exp(arg)-1),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.fround=function(r){try{return Float32Array?new Float32Array([r])[0]:(showError("fround cannot execute because Float32Array not supported."),0)}catch(e){showError("Error: Unable to process expression due to "+e+".")}},Math.fact=function(arg){try{if(arg=parseInt(arg,10),arg>0){for(var args=[],i=0;arg>i;i++)args.push(i+1+"*");args[args.length-1]=args.length,args=args.toString();do args=args.replace(",","");while(args.indexOf(",")>-1);return round(eval(args),64)}return 0===arg?"1":(showError("Factorials can only be done on positive numbers!"),0)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.hypot=function(){try{var r=0;for(var e in arguments){if(1/0===arguments[e]||arguments[e]===-1/0)return 1/0;arguments[e]=parseFloat(arguments[e]),r+=arguments[e]*arguments[e]}return round(Math.sqrt(r),defPrec)}catch(a){showError("Error: Unable to process expression due to "+a+".")}},Math.imul=function(r,e){try{var a=r>>>16&65535,t=65535&r,o=e>>>16&65535,s=65535&e;return t*s+(a*s+t*o<<16>>>0)|0}catch(n){showError("Error: Unable to process expression due to "+n+".")}},Math.intdiv=function(){try{if("string"==typeof arguments[0]||"number"==typeof arguments[0]){var total="";for(var i in arguments)total+=parseFloat(arguments[i]).toString()+"/";return total=total.substr(0,total.length-1),Math.floor(eval(total))}arguments[0]=arguments[0].toString();do arguments[0]=arguments[0].replace(",","/");while(arguments[0].indexOf(",")>-1);return Math.floor(eval(arguments[0]))}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.line=function(){try{var r={};if("string"==typeof arguments[0]||"number"==typeof arguments[0]){arguments[0]=parseFloat(arguments[0]),arguments[1]=parseFloat(arguments[1]),arguments[2]=parseFloat(arguments[2]),arguments[3]=parseFloat(arguments[3]),r.slope=(arguments[3]-arguments[1])/(arguments[2]-arguments[0]),r.yint=arguments[1]-round(r.slope*arguments[0],defPrec);var e=r.yint>0?" + "+r.yint:" - "+-r.yint;return r.equation="y = "+r.slope+"x"+e,r}if(arguments[0].length>4)return showError("You may only use two sets of points with the line function!"),0;var a=[],t=0,r={};do a[t]=parseFloat(arguments[0].shift()),t++;while(arguments[0].length>0);r.slope=(a[3]-a[1])/(a[2]-a[0]),r.yint=a[1]-round(r.slope*a[0],defPrec);var e=r.yint>0?" + "+r.yint:" - "+-r.yint;return r.equation="y = "+r.slope+"x"+e,r}catch(o){showError("Error: Unable to process expression due to "+o+".")}},Math.log10=function(arg){try{return arg=parseFloat(arg),round(eval(Math.log(arg)/Math.log(10)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.log1p=function(arg){try{return arg=parseFloat(arg),round(eval(Math.log(1+arg)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.log2=function(arg){try{return arg=parseFloat(arg),round(eval(Math.log(arg)/Math.log(2)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.logb=function(base,arg){try{return base=parseFloat(base),arg=parseFloat(arg),round(eval(Math.log(arg)/Math.log(base)),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.mean=function(){var total=0;try{if("string"==typeof arguments[0]||"number"==typeof arguments[0]){for(var i in arguments)total+=parseInt(arguments[i],10);return round(total/arguments.length,defPrec)}var len=arguments[0].length;arguments[0]=arguments[0].toString();do arguments[0]=arguments[0].replace(",","+");while(arguments[0].indexOf(",")>-1);return arguments[0]=eval(arguments[0]),round(eval(arguments[0]/len),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.nck=function(n,k){try{if(n=parseInt(n,10),k=parseInt(k,10),n>0&&k>0)return round(eval(Math.fact(n)/(Math.fact(n-k)*Math.fact(k))),defPrec);showError("When using nck, n and k must both be greater than zero!")}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.nroot=function(r,e){try{if(r=parseFloat(r),e=parseInt(e,10),e%2===0&&0>r)return showError("Even roots require a positive number!"),0;var a=Math.pow(Math.abs(r),1/e);return a=0>r?-a:a,round(a,defPrec)}catch(t){showError("Error: Unable to process expression due to "+t+".")}},Math.randomr=function(min,max){try{return min=parseInt(min,10),max=parseInt(max,10),eval(Math.floor(Math.random()*(max-min+1))+min)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.sign=function(r){try{return r>0?1:0>r?-1:0}catch(e){showError("Error: Unable to process expression due to "+e+".")}},Math.sinh=function(arg){try{return arg=parseFloat(arg),round(eval((Math.exp(arg)-Math.exp(-arg))/2),defPrec)}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.tanh=function(arg){try{return 1/0===arg?1:arg===-1/0?-1:(arg=parseFloat(arg),round(eval((Math.exp(arg)-Math.exp(-arg))/(Math.exp(arg)+Math.exp(-arg))),defPrec))}catch(err){showError("Error: Unable to process expression due to "+err+".")}},Math.trunc=function(r){try{return r=parseFloat(r),0>r?Math.ceil(r):Math.floor(r)}catch(e){showError("Error: Unable to process expression due to "+e+".")}};
