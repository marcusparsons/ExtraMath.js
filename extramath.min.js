/*
    Created by: Marcus Parsons, Copyright 2015, http://www.marcusparsons.com
    
    ExtraMath is free for everyone to use, regardless of whether it is for personal or commercial use. 
    I only ask that you give me credit because a lot of work has gone into this library. It is licensed under
    the GNU GPL v3 license. You may obtain a copy of this license at http://www.gnu.org/licenses/gpl.txt
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
        
    Big credit to the MDN for some of their polyfill functions! https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math
    
*/

function round(r,a,e){var t,s,n,o;if(a|=0,t=Math.pow(10,a),r*=t,o=r>0|-(0>r),n=r%1===.5*o,s=Math.floor(r),n)switch(e){case"round_up":r=s+(o>0);break;case"round_down":r=s+(0>o);break;case"round_even":r=s+s%2*o;break;case"round_odd":r=s+!(s%2);break;default:r=s+(o>0)}return(n?r:Math.round(r))/t}function showError(r){alert(r)}var defPrec=16,errorMsg="Error: Unable to process expression due to ";Math.acosh=function(arg){try{return arg=parseFloat(arg),1>arg?(showNotice("Error: acosh only accepts numbers greater than or equal to 1"),0):round(eval(Math.log(arg+Math.sqrt(arg*arg-1))),defPrec)}catch(err){showError(errorMsg+err)}},Math.area=function(shape){try{var args=[];if("string"==typeof arguments[1]||"number"==typeof arguments[1])for(var i in arguments)0!==i&&(args[i-1]=parseFloat(arguments[i]));else for(var i=0;i<arguments[1].length+1;i++)args[i]=parseFloat(arguments[1].shift());switch(shape){case"circle":case"cir":var r=args[0];return"exact"===args[1]?round(eval(Math.pow(r,2)),defPrec)+"&pi;":round(eval(Math.PI*Math.pow(r,2)),defPrec);case"cone":case"con":var r=args[0],h=args[1];return round(eval(Math.PI*r*(r+Math.sqrt(Math.pow(h,2)+Math.pow(r,2)))),defPrec);case"cube":case"cub":var side=args[0];return round(eval(6*Math.pow(side,2)),defPrec);case"cylinder":case"cyl":var r=args[0],h=args[1];return round(eval(2*Math.PI*r*(h+r)),defPrec);case"ellipse":case"ell":var a=args[0],b=args[1];return"exact"===args[2]?round(eval(a*b),defPrec)+"&pi;":round(eval(Math.PI*a*b),defPrec);case"npolygon":case"npo":var n=args[0],side=args[1];return round(eval(.25*n*Math.pow(side,2)*(1/Math.tan(Math.PI/n))),defPrec);case"parallelogram":case"par":var a=args[0],b=args[1];return round(eval(a*b),defPrec);case"rectangle":case"rec":var a=args[0],b=args[1];return round(eval(a*b),defPrec);case"sector":case"sec":var r=args[0],angle=args[1];return round(eval(.5*Math.pow(r,2)*angle),defPrec);case"segment":case"seg":var r=args[0],angle=args[1];return round(eval(.5*(angle-Math.sin(angle))*Math.pow(r,2)),defPrec);case"square":case"squ":var a=args[0];return round(eval(Math.pow(a,2)),defPrec);case"sphere":case"sph":var r=args[0];return round(eval(4*Math.PI*Math.pow(r,2)),defPrec);case"torus":case"tor":var lilr=args[0],bigr=args[1];return round(eval(4*Math.pow(Math.PI,2)*lilr*bigr),defPrec);case"trapezoid":case"tra":var a=args[0],b=args[1],h=args[2];return round(eval(.5*(a+b)*h),defPrec);case"triangle":case"tri":var b=args[0],h=args[1];return round(eval(.5*b*h),defPrec);default:showError("You must choose a shape in order to calculate its area. You may enter the full name of the shape or the first three letters.")}}catch(err){showError(errorMsg+err)}},Math.asinh=function(arg){try{return arg=parseFloat(arg),arg===-1/0?arg:round(eval(Math.log(arg+Math.sqrt(arg*arg+1))),defPrec)}catch(err){showError(errorMsg+err)}},Math.atanh=function(arg){try{return arg=parseFloat(arg),-1>arg||arg>1?(showNotice("Error: atanh only accepts numbers between 1 and -1, exclusive."),0):round(eval(Math.log((1+arg)/(1-arg))/2),defPrec)}catch(err){showError(errorMsg+err)}},Math.cbrt=function(r){try{r=parseFloat(r);var a=Math.pow(Math.abs(r),1/3);return a=0>r?-a:a,round(a,defPrec)}catch(e){showError(errorMsg+e)}},Math.clz32=function(r){try{var a=Number(r)>>>0;return a?32-a.toString(2).length:32}catch(e){showError(errorMsg+e)}},Math.cosh=function(arg){try{arg=parseFloat(arg);var y=Math.exp(arg);return round(eval((y+1/y)/2),defPrec)}catch(err){showError(errorMsg+err)}},Math.expm1=function(arg){try{return arg=parseFloat(arg),round(eval(Math.exp(arg)-1),defPrec)}catch(err){showError(errorMsg+err)}},Math.fround=function(r){try{return Float32Array?new Float32Array([r])[0]:(showError("fround cannot execute because Float32Array not supported."),0)}catch(a){showError(errorMsg+a)}},Math.fact=function(arg){try{if(arg=parseInt(arg,10),arg>0){for(var args=[],i=0;arg>i;i++)args.push(i+1+"*");args[args.length-1]=args.length,args=args.toString();do args=args.replace(",","");while(args.indexOf(",")>-1);return round(eval(args),64)}return 0===arg?"1":(showError("Factorials can only be done on positive numbers!"),0)}catch(err){showError(errorMsg+err)}},Math.hypot=function(){try{var r=0;for(var a in arguments){if(1/0===arguments[a]||arguments[a]===-1/0)return 1/0;arguments[a]=parseFloat(arguments[a]),r+=arguments[a]*arguments[a]}return round(Math.sqrt(r),defPrec)}catch(e){showError(errorMsg+e)}},Math.imul=function(r,a){try{var e=r>>>16&65535,t=65535&r,s=a>>>16&65535,n=65535&a;return t*n+(e*n+t*s<<16>>>0)|0}catch(o){showError(errorMsg+o)}},Math.intdiv=function(){try{if("string"==typeof arguments[0]||"number"==typeof arguments[0]){var total="";for(var i in arguments)total+=parseFloat(arguments[i]).toString()+"/";return total=total.substr(0,total.length-1),Math.floor(eval(total))}arguments[0]=arguments[0].toString();do arguments[0]=arguments[0].replace(",","/");while(arguments[0].indexOf(",")>-1);return Math.floor(eval(arguments[0]))}catch(err){showError(errorMsg+err)}},Math.line=function(){try{var r={};if("string"==typeof arguments[0]||"number"==typeof arguments[0]){arguments[0]=parseFloat(arguments[0]),arguments[1]=parseFloat(arguments[1]),arguments[2]=parseFloat(arguments[2]),arguments[3]=parseFloat(arguments[3]),r.slope=(arguments[3]-arguments[1])/(arguments[2]-arguments[0]),r.yint=arguments[1]-round(r.slope*arguments[0],defPrec);var a=r.yint>0?" + "+r.yint:" - "+-r.yint;return r.equation="y = "+r.slope+"x"+a,r}if(arguments[0].length>4)return showError("You may only use two sets of points with the line function!"),0;var e=[],t=0,r={};do e[t]=parseFloat(arguments[0].shift()),t++;while(arguments[0].length>0);r.slope=(e[3]-e[1])/(e[2]-e[0]),r.yint=e[1]-round(r.slope*e[0],defPrec);var a=r.yint>0?" + "+r.yint:" - "+-r.yint;return r.equation="y = "+r.slope+"x"+a,r}catch(s){showError(errorMsg+s)}},Math.log10=function(arg){try{return arg=parseFloat(arg),round(eval(Math.log(arg)/Math.log(10)),defPrec)}catch(err){showError(errorMsg+err)}},Math.log1p=function(arg){try{return arg=parseFloat(arg),round(eval(Math.log(1+arg)),defPrec)}catch(err){showError(errorMsg+err)}},Math.log2=function(arg){try{return arg=parseFloat(arg),round(eval(Math.log(arg)/Math.log(2)),defPrec)}catch(err){showError(errorMsg+err)}},Math.logb=function(arg,base){try{return base=parseFloat(base),arg=parseFloat(arg),round(eval(Math.log(arg)/Math.log(base)),defPrec)}catch(err){showError(errorMsg+err)}},Math.mean=function(){var total=0;try{if("string"==typeof arguments[0]||"number"==typeof arguments[0]){for(var i in arguments)total+=parseInt(arguments[i],10);return round(total/arguments.length,defPrec)}var len=arguments[0].length;arguments[0]=arguments[0].toString();do arguments[0]=arguments[0].replace(",","+");while(arguments[0].indexOf(",")>-1);return arguments[0]=eval(arguments[0]),round(eval(arguments[0]/len),defPrec)}catch(err){showError(errorMsg+err)}},Math.nck=function(n,k){try{if(n=parseInt(n,10),k=parseInt(k,10),n>0&&k>0)return round(eval(Math.fact(n)/(Math.fact(n-k)*Math.fact(k))),defPrec);showError("When using nck, n and k must both be greater than zero!")}catch(err){showError(errorMsg+err)}},Math.nroot=function(r,a){try{if(r=parseFloat(r),a=parseInt(a,10),a%2===0&&0>r)return showError("Even roots require a positive number!"),0;var e=Math.pow(Math.abs(r),1/a);return e=0>r?-e:e,round(e,defPrec)}catch(t){showError(errorMsg+t)}},Math.perimeter=function(shape){try{var args=[];if("string"==typeof arguments[1]||"number"==typeof arguments[1])for(var i in arguments)0!==i&&(args[i-1]=parseFloat(arguments[i]));else for(var i=0;i<arguments[1].length+1;i++)args[i]=parseFloat(arguments[1].shift());switch(shape){case"circle":case"cir":var r=args[0];return round(eval(2*Math.PI*r),defPrec);case"ellipse":case"ell":var a=args[0],b=args[1],h=Math.pow(a-b,2)/Math.pow(a+b,2);return round(eval(Math.PI*(a+b)*(1+3*h/(10+Math.sqrt(4-3*h)))),defPrec);case"quadrilateral":case"qua":var a=args[0],b=args[1],c=args[2],d=args[3];return round(eval(a+b+c+d),defPrec);case"rectangle":case"rec":var w=args[0],h=args[1];return round(eval(2*(w+h)),defPrec);case"sector":case"sec":var r=args[0],angle=args[1];return round(eval(r*(angle+2)),defPrec);case"square":case"squ":var a=args[0];return round(eval(4*a),defPrec);case"triangle":case"tri":var a=args[0],b=args[1],c=args[2];return round(eval(a+b+c),defPrec);default:showError("You must choose a shape in order to calculate its perimeter. You may enter the full name of the shape or the first three letters.")}}catch(err){showError(errorMsg+err)}},Math.randomr=function(min,max){try{return min=parseInt(min,10),max=parseInt(max,10),eval(Math.floor(Math.random()*(max-min+1))+min)}catch(err){showError(errorMsg+err)}},Math.sign=function(r){try{return r>0?1:0>r?-1:0}catch(a){showError(errorMsg+a)}},Math.sinh=function(arg){try{return arg=parseFloat(arg),round(eval((Math.exp(arg)-Math.exp(-arg))/2),defPrec)}catch(err){showError(errorMsg+err)}},Math.tanh=function(arg){try{return 1/0===arg?1:arg===-1/0?-1:(arg=parseFloat(arg),round(eval((Math.exp(arg)-Math.exp(-arg))/(Math.exp(arg)+Math.exp(-arg))),defPrec))}catch(err){showError(errorMsg+err)}},Math.trunc=function(r){try{return r=parseFloat(r),0>r?Math.ceil(r):Math.floor(r)}catch(a){showError(errorMsg+a)}},Math.volume=function(shape){try{var args=[];if("string"==typeof arguments[1]||"number"==typeof arguments[1])for(var i in arguments)0!==i&&(args[i-1]=parseFloat(arguments[i]));else for(var i=0;i<arguments[1].length+1;i++)args[i]=parseFloat(arguments[1].shift());switch(shape){case"cone":case"con":var r=args[0],h=args[1];return round(eval(1/3*Math.PI*Math.pow(r,2)*h),defPrec);case"cube":case"cub":var side=args[0];return round(eval(Math.pow(side,3)),defPrec);case"cylinder":case"cyl":var r=args[0],h=args[1];return round(eval(Math.PI*Math.pow(r,2)*h),defPrec);case"ellipsoid":case"ell":var r1=args[0],r2=args[1],r3=args[2];return round(eval(4/3*Math.PI*r1*r2*r3),defPrec);case"irregularprism":case"irr":var b=args[0],h=args[1];return round(eval(b*h),defPrec);case"pyramid":case"pyr":var l=args[0],w=args[1],h=args[2];return round(eval(l*w*h/3),defPrec);case"rectangularprism":case"rec":var l=args[0],w=args[1],h=args[2];return round(eval(l*w*h),defPrec);case"sphere":case"sph":var r=args[0];return round(eval(4/3*Math.PI*Math.pow(r,3)),defPrec);default:showError("You must choose a shape in order to calculate its volume. You may enter the full name of the shape or the first three letters.")}}catch(err){showError(errorMsg+err)}};
